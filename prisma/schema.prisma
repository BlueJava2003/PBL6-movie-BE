// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Auth {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  fullname      String?
  refreshToken  String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

model BackList {
  id                  Int       @id @default(autoincrement())
  oldAccessToken      String    @unique
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}
model Room {
  id Int @id @default(autoincrement())
  roomName String
  capacity Int
  createdAt DateTime
  updatedAt DateTime
  seatStates SeatState[]
}

model SeatState {
  id Int  @id @default(autoincrement())
  room Room @relation(fields: [roomId],references: [id])
  roomId Int 
  seat Seat @relation(fields: [seatId],references: [id])
  seatId Int
  createdAt DateTime
  updatedAt DateTime
  // booking Booking[]
}
model Seat {
  id Int @id @default(autoincrement())
  name String @unique
  seatType SeatType @relation(fields: [seatTypeId],references: [id])
  seatTypeId Int
  seatStates SeatState[]
}
model SeatType {
  id Int @id @default(autoincrement())
  name String @unique
  price Int
  seats Seat[]
}